(define (times-object n obj)
    (if (= n 1)
        (list obj)
        (cons obj (times-object (- n 1) obj))
    )
)

(define (decode lst)
    (define (decode-atom obj)
        (if (list? obj)
            (times-object (car obj) (cadr obj))
            (list obj)
        )
    )
    (fold-left append '() (map decode-atom lst))
)